# ~/.pythonrc
# enable syntax completion

# try:
#     import readline
# except ImportError:
#     print("Module readline not available.")
# else:
#     import rlcompleter
#     readline.parse_and_bind("tab: complete")

def _enable_history_and_completer():
    import atexit
    import os.path

    try:
        import readline
    except ImportError:
        return
    try:
        import rlcompleter
    except ImportError:
        return

    HISTORY_PATH = os.path.expanduser('~/.python_history')

    def _save_history():
        readline.write_history_file(HISTORY_PATH)

    readline.set_completer(rlcompleter.Completer().complete)
    if 'libedit' in readline.__doc__:
        readline.parse_and_bind("bind ^I rl_complete")
    else:
        readline.parse_and_bind("tab: complete")
    if os.path.exists(HISTORY_PATH):
        readline.read_history_file(HISTORY_PATH)
    readline.set_history_length(10000)
    atexit.register(_save_history)


_enable_history_and_completer()
del _enable_history_and_completer
