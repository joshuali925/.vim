#!/usr/bin/env bash
# https://github.com/kevinhwang91/dotfiles/blob/156c2e258c17677081b412675cef45b07a597a7c/script/shell/osc52send
# https://medium.com/free-code-camp/tmux-in-practice-integration-with-system-clipboard-bcd72c62ff7b
# https://sunaku.github.io/tmux-yank-osc52.html
# https://github.com/ojroques/vim-oscyank/issues/26: tmux >= 3.3 doesn't need OSC52 sequence to be wrapped

buf=$(cat "$@")
buflen=$(printf %s "$buf" | wc -c)
maxlen=74994

otty=$TTY
if [ -z "$otty" ]; then
  otty="/dev/$(ps -p $PPID -o tty=)"
fi
if [ -z "$otty" ]; then
  otty="/dev/tty"
fi

if [ "$buflen" -le "$maxlen" ]; then
  esc="\033]52;c;$(printf %s "$buf" | base64 | tr -d '\r\n')\a"  # pipe into tr instead of `base64 -w0` for portability
  printf "$esc" > $otty
else
  while true; do
    esc="\033]52;c;$(printf %s "$buf" | tail -c "$buflen" | head -c "$maxlen" | base64 | tr -d '\r\n')\a"
    printf "$esc" > $otty
    ((buflen -= maxlen))
    if [ "$buflen" -gt 0 ]; then
      printf "input is %d bytes too long, needs %d more time" "$buflen" "$((buflen / maxlen + 1))" >&2
      read -p ', continue? (Y/n) ' -n 1 < $otty; echo
      [[ ! $REPLY =~ ^[Yy]?$ ]] && break
    else
      break
    fi
  done
fi
