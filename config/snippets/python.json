{
  "CLI template": {
    "prefix": "template-cli",
    "body": [
      "#!/usr/bin/env python3",
      "",
      "import os, sys, re, io, random, math, json, shlex, subprocess",
      "from functools import reduce",
      "",
      "if not sys.stdin.isatty():",
      "\tstdin = [line.rstrip() for line in sys.stdin]",
      "\tprint(\"\\n\".join([\"Read from pipe:\"] + stdin))",
      "\t# json_data = json.loads(\"\".join(stdin))",
      "",
      "if len(sys.argv) > 1:",
      "\targ_str = shlex.quote(shlex.join(sys.argv[1:]))",
      "\tprint(f\"Quoted shell string: {arg_str}\\n\")",
      "\tout = subprocess.run(",
      "\t\t[\"bash\", \"-c\", \"echo {}\".format(arg_str)],",
      "\t\tcapture_output=True,",
      "\t\ttext=True,",
      "\t)",
      "\tprint(out.stdout)",
      "\tprint(out.stderr)",
      "\tprint(f\"Process finished with status {out.returncode}\")"
    ]
  },
  "Performance test template": {
    "prefix": "template-benchmark",
    "body": [
      "from timeit import timeit",
      "",
      "",
      "def ${1:run}():",
      "\t$0",
      "",
      "",
      "result = timeit(\"$1()\", setup=\"from __main__ import ${1}\", number=${2:10})",
      "print(f\"Average time: {result / ${2}:.6f} seconds\")"
    ]
  },
  "Flatten 2d array": {
    "prefix": "flatten",
    "body": ["[i for j in ${1:arr} for i in j]"]
  }
}
