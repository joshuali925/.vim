{
  "Bash template": {
    "prefix": "template",
    "body": ["#!/usr/bin/env bash", "set -eo pipefail", "", "$0"]
  },
  "if": {
    "prefix": "if",
    "body": ["if [ ${1:\"\\$VAR\" = STRING} ]; then", "  $0", "fi"]
  },
  "if command succeeds": {
    "prefix": "ifcommand",
    "body": ["if ${1:grep -q text <<< \"\\$VAR\"}; then", "  $0", "fi"]
  },
  "if command exists": {
    "prefix": "ifcommandexists",
    "body": ["if ! command -v ${1:cmd} &> /dev/null; then", "  $0", "fi"]
  },
  "if glob": {
    "prefix": "ifglob",
    "body": ["if [[ \\$${1:VAR} = *${2:STRING}* ]]; then", "  $0", "fi"]
  },
  "if regex": {
    "prefix": "ifregex",
    "body": ["if [[ \\$${1:VAR} =~ ${2:^([0-9]{10\\}|[a-z]{5\\})\\$} ]]; then", "  $0", "fi"]
  },
  "case": {
    "prefix": "case",
    "body": [
      "case $1 in",
      "  $2) $3 ;;",
      "  *) echo 'Unsupported, exiting..' >&2; exit 1 ;;",
      "esac"
    ]
  },
  "redirect to null": {
    "prefix": "redirnull",
    "body": "> /dev/null 2>&1"
  },
  "redirect stderr to null": {
    "prefix": "redirerrornull",
    "body": "2> /dev/null"
  },
  "redirect stderr to stdin": {
    "prefix": "redirerrorstdin",
    "body": "2>&1"
  },
  "log": {
    "prefix": "log",
    "body": "printf \"\\033[0;36m%s\\033[0m\\n\" \"$0\""
  },
  "loop lines": {
    "prefix": "whileread",
    "body": [
      "while IFS= read -r line; do",
      "  echo \"... \\$line ...\"",
      "done <<< \"\\$${0:list}\""
    ]
  }
}
