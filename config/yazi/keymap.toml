# https://raw.githubusercontent.com/sxyazi/yazi/HEAD/yazi-config/preset/keymap.toml

[manager]
prepend_keymap = [
  { on = "c", run = ["escape --visual --select", "unyank"], desc = "Clear all selections" },
  { on = "r", run = ["escape --find --filter --search", "unyank"], desc = "Clear all filters" },
  { on = ".", run = "seek -5", desc = "Seek up 5 units in the preview" },
  { on = ",", run = "seek 5", desc = "Seek down 5 units in the preview" },
  { on = "e", run = '''shell '$EDITOR "$@"' --block --confirm''', desc = "Edit files" },
  { on = "l", run = "plugin --sync smart-enter", desc = "Enter the child directory, or open the file" },
  { on = "d", run = "yank --cut", desc = "Cut the selected files" },
  { on = "d", run = "yank --cut", desc = "Cut the selected files" },
  { on = "D", run = "unyank", desc = "Cancel the yank status of files" },
  { on = "X", run = "remove", desc = "Move the files to the trash" },
  { on = "x", run = "remove --permanently", desc = "Permanently delete the files" },
  { on = "R", run = "rename", desc = "Rename a file or directory" },
  { on = "<Space>", run = "select --state=none", desc = "Toggle the current selection state" },
  { on = "v", run = ["select --state=none", "arrow 1"], desc = "Toggle the current selection state" },
  { on = "V", run = "select_all --state=none", desc = "Inverse selection of all files" },
  { on = "<C-v>", run = "visual_mode", desc = "Enter visual mode (selection mode)" },
  { on = "w", run = 'shell "$SHELL" --block --confirm', desc = "Open shell here" },
  { on = "W", run = "tasks_show", desc = "Show task manager" },
  { on = "q", run = "close", desc = "Close the current tab, or quit if it is last tab" },
  { on = "[", run = "tab_create", desc = "Create a new tab" },
  { on = "]", run = "tab_create --current", desc = "Create a new tab with CWD" },
  { on = "<Backspace>", run = "tab_switch -1 --relative", desc = "Switch to the previous tab" },
  { on = "\\", run = "tab_switch 1 --relative", desc = "Switch to the next tab" },
  { on = "<C-o>", run = "shell lazygit --block --confirm", desc = "Open Lazygit" },
  { on = "i", run = "plugin --sync max-preview", desc = "Toggle max preview" },
  { on = "I", run = '''shell '~/.vim/config/preview.sh "$0"' --block --confirm''', desc = "Preview" },
  { on = "t", run = "plugin change-dir --args='fzf CTRL_T'", desc = "Find file with fzf" },
  { on = "T", run = "plugin change-dir --args='fzf CTRL_T --no-ignore'", desc = "Find fine with fzf --no-ignore" },
  { on = "<Tab>", run = "plugin change-dir --args='fzf ALT_C'", desc = "Focus file in current directory with fzf" },
  { on = "z", run = "plugin change-dir --args=z", desc = "Change directory with z.sh" },
  { on = "J", run = "plugin change-dir --sync --args='parent 1'", desc = "Go down in parent dir" },
  { on = "K", run = "plugin change-dir --sync --args='parent -1'", desc = "Go up in parent dir" },
  { on = "f", run = "plugin jump-to-char", desc = "Jump to char" },
  { on = "F", run = "search fd", desc = "Search files by name using fd" },
  { on = "/", run = "filter --smart", desc = "Filter files" },
  { on = "?", run = "search rg", desc = "Search files by content using ripgrep" },
  { on = ":", run = "plugin command", desc = "Run a command" },
  { on = ";", run = "shell --block --interactive", desc = "Run a shell command (block until finishes)" },

  { on = ["s", "t"], run = ["sort modified --reverse=no", "linemode mtime"], desc = "Sort by modified time" },
  { on = ["s", "T"], run = ["sort modified --reverse", "linemode mtime"], desc = "Sort by modified time (reverse)" },
  { on = ["s", "c"], run = ["sort created --reverse=no", "linemode ctime"], desc = "Sort by created time" },
  { on = ["s", "C"], run = ["sort created --reverse", "linemode ctime"], desc = "Sort by created time (reverse)" },
  { on = ["s", "e"], run = "sort extension --reverse=no", desc = "Sort by extension" },
  { on = ["s", "E"], run = "sort extension --reverse", desc = "Sort by extension (reverse)" },
  { on = ["s", "n"], run = ["sort natural --reverse=no", "linemode size"], desc = "Sort naturally" },
  { on = ["s", "N"], run = ["sort natural --reverse", "linemode size"], desc = "Sort naturally (reverse)" },
  { on = ["s", "s"], run = ["sort size --reverse=no", "linemode size"], desc = "Sort by size" },
  { on = ["s", "S"], run = ["sort size --reverse", "linemode size"], desc = "Sort by size (reverse)" },

  { on = ["g", "s"], run = '''shell 'tput smcup; git status; bash -c "read -n 1 -s _"; tput rmcup' --block --confirm''', desc = "Git status" },
  { on = ["g", "o"], run = '''shell 'tput smcup; git log --color --graph --pretty=format:"%C(yellow)%h %Cgreen⦗%cr⦘%C(auto)%d%Creset %s %C(bold blue)❪%an❫%Creset" --abbrev-commit -- "$0" | less -RiM; tput rmcup' --block --confirm''', desc = "Git log of current file" },
  { on = ["g", "d"], run = "cd ~/Downloads", desc = "Go to the downloads directory" },
  { on = ["g", "c"], run = "cd ~/.config", desc = "Go to the config directory" },
  { on = ["g", "l"], run = "cd ~/.local", desc = "Go to the ~/.local directory" },
  { on = ["g", "v"], run = "cd ~/.vim", desc = "Go to the ~/.vim directory" },
  { on = ["g", "n"], run = "cd ~/.local/share/nvim/lazy", desc = "Go to nvim lazy plugins directory" },
  { on = ["g", "p"], run = "cd ~/projects", desc = "Go to the ~/projects directory" },
  { on = ["g", "r"], run = 'plugin change-dir --args=git_root', desc = "Go to git root" },
  { on = ["g", "f"], run = 'plugin change-dir --sync --args=follow', desc = "Follow symlink" },

  { on = ["m", "r"], run = '''shell 'printf "%s\n" "$@" | vidir -' --block --confirm''', desc = "vidir" },
  { on = ["m", "s"], run = '''shell 'du -sbc "$@" | awk '\''function hr(bytes) { hum[1099511627776]="TiB"; hum[1073741824]="GiB"; hum[1048576]="MiB"; hum[1024]="kiB"; for (x = 1099511627776; x >= 1024; x /= 1024) { if (bytes >= x) { return sprintf("%11.6f %s", bytes/x, hum[x]); } } return sprintf("%4d     B", bytes); } { printf hr($1) "\t"; $1=""; print $0; }'\'' | grep "total\$"; echo Press any key to continue; bash -c "read -n 1 -s _"' --block --confirm''', desc = "Show selected size" },
  { on = ["m", "t"], run = '''shell 'less -RiM +F "$0"' --block --confirm''', desc = "Tail" },
  { on = ["m", "c"], run = '''shell "$EDITOR ~/.vim/config/yazi/keymap.toml" --block --confirm''', desc = "Edit config" },
  { on = ["m", "y"], run = "copy path", desc = "Copy the absolute path" },
  { on = ["m", "Y"], run = '''shell 'for file in "$@"; do basename "$file" | sed "s/^/'\''/;s/$/'\''/"; done | paste -s -d " " - | y' --confirm''', desc = "Copy file names" },
  { on = ["m", "p"], run = "link --relative", desc = "Symlink the relative path of files" },
  { on = ["m", "P"], run = "link", desc = "Symlink the absolute path of files" },
  { on = ["m", "d", "5"], run = '''shell 'md5sum "$@"; echo Press any key to continue; bash -c "read -n 1 -s _"' --block --confirm''', desc = "Show selected files md5sum" },
  { on = ["m", "1"], run = '''shell 'btop' --block --confirm''', desc = "Open btop" },
  { on = ["m", "!"], run = '''shell 'sudo -E "$(which yazi)"' --block --confirm''', desc = "Open yazi with sudo" },
  { on = ["m", "e"], run = '''shell 'sudo vim -u ~/.vim/config/mini.vim "$0"' --block --confirm''', desc = "Sudo edit" },
]

[input]
prepend_keymap = [
  { on = "q", run = "close", desc = "Cancel input" },
  { on = "<Esc>", run = "close", desc = "Cancel input" },
  { on = "<C-u>", run = "escape", desc = "Go back the normal mode, or cancel input" },
]

[tasks]
prepend_keymap = [{ on = "q", run = "close", desc = "Close task manager" }]
